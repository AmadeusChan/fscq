To build fscq, use a version of Coq more recent than 8.4 (it has at
least one bug that's tickled by our code).  For now, this seems to mean
building Coq from source:

  git clone https://github.com/coq/coq.git

As one reference point, commit 53bfe9cf seems to produce a working
version of Coq that builds fscq.

To develop Coq code using CoqIDE, check out coqide.sh, which invokes
coqide with the appropriate arguments for spawning many parallel coqtop
processes and setting the right logical-to-physical path mappings.

Use GHC 7.10.1 to build the Haskell-extracted code.  On Ubuntu, this
means running this as root:

  add-apt-repository ppa:hvr/ghc
  apt-get update
  apt-get install ghc-7.10.1-prof

You also need to install HFuse:

  apt-get install libfuse-dev
  git clone https://github.com/m15k/hfuse
  cd hfuse
  PATH=/opt/ghc/7.10.1/bin:$PATH ./Setup.lhs configure -p --user
  PATH=/opt/ghc/7.10.1/bin:$PATH ./Setup.lhs build
  PATH=/opt/ghc/7.10.1/bin:$PATH ./Setup.lhs install

To run the fuse fscq:

  mkdir /tmp/fscq
  ./fuse -d -s -f /tmp/fscq  &

Use use fscq:
  echo hello > /tmp/fscq/h.txt
  cat h.txt
  ls /tmp/fscq/
  etc.

To see stats:

  cat /tmp/fscq/stats

To unmount:

  fusermount -u /tmp/fscq

To run benchmarks, see bench/